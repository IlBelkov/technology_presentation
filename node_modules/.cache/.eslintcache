[{"/Users/ilya/Projects/technology_presentation/src/index.tsx":"1","/Users/ilya/Projects/technology_presentation/src/serviceWorker.ts":"2","/Users/ilya/Projects/technology_presentation/src/store/store.ts":"3","/Users/ilya/Projects/technology_presentation/src/App.tsx":"4","/Users/ilya/Projects/technology_presentation/src/style-app.ts":"5","/Users/ilya/Projects/technology_presentation/src/store/reducers/appSettings.ts":"6","/Users/ilya/Projects/technology_presentation/src/utils/hooks.ts":"7","/Users/ilya/Projects/technology_presentation/src/utils/theme/theme.ts":"8"},{"size":590,"mtime":1626523278615,"results":"9","hashOfConfig":"10"},{"size":5290,"mtime":1626520356784,"results":"11","hashOfConfig":"10"},{"size":448,"mtime":1626700738791,"results":"12","hashOfConfig":"10"},{"size":635,"mtime":1626871297824,"results":"13","hashOfConfig":"10"},{"size":257,"mtime":1626703192937,"results":"14","hashOfConfig":"10"},{"size":615,"mtime":1626708938147,"results":"15","hashOfConfig":"10"},{"size":281,"mtime":1626520356784,"results":"16","hashOfConfig":"10"},{"size":247,"mtime":1626702126346,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"qkpy6n",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"/Users/ilya/Projects/technology_presentation/src/index.tsx",[],["37","38"],"/Users/ilya/Projects/technology_presentation/src/serviceWorker.ts",[],"/Users/ilya/Projects/technology_presentation/src/store/store.ts",[],"/Users/ilya/Projects/technology_presentation/src/App.tsx",[],"/Users/ilya/Projects/technology_presentation/src/style-app.ts",[],"/Users/ilya/Projects/technology_presentation/src/store/reducers/appSettings.ts",["39"],"import { createSlice } from '@reduxjs/toolkit'\nimport { RootState } from '../store'\n\nexport interface appSettings {\n  theme: 'light' | 'dark'\n}\n\nconst initialState: appSettings = {\n  theme: 'light'\n}\n\nexport const appSettings = createSlice({\n  name: 'appSettings',\n  initialState,\n  reducers: {\n    changeTheme: (state) => {\n      if (state.theme === 'light') {\n        state.theme = 'dark'\n      } else {\n        state.theme = 'light'\n      }\n    }\n  }\n})\n\nexport const appTheme = (state: RootState) => state.appSettings.theme;\n\nexport const {changeTheme} = appSettings.actions\n\nexport default appSettings.reducer\n","/Users/ilya/Projects/technology_presentation/src/utils/hooks.ts",[],"/Users/ilya/Projects/technology_presentation/src/utils/theme/theme.ts",["40"],"export interface DefaultTheme {\n  background: string\n  color: string\n}\n\nconst dark: DefaultTheme = { background: '#000000', color: '#ffffff' }\nconst light: DefaultTheme = { background: '#ffffff', color: '#000000' }\n\n\nexport default { dark, light}\n",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":12,"column":14,"nodeType":"47","messageId":"48","endLine":12,"endColumn":25},{"ruleId":"49","severity":1,"message":"50","line":10,"column":1,"nodeType":"51","endLine":10,"endColumn":30},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"@typescript-eslint/no-redeclare","'appSettings' is already defined.","Identifier","redeclared","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]